import numpy as np


# MATRICES TRIANGULARES SUPERIORES (up)
up = [
    
    np.array([[1, -2],
              [0, 3]]),  # 2x2
    np.array([[4, -1, 2],
              [0, 5, 6],
              [0, 0, 7]]),  # 3x3
    np.array([[3, 2, 1, 5],
              [0, -2, 4, 3],
              [0, 0, 6, 2],
              [0, 0, 0, 1]]),  # 4x4
    np.array([[6, -1, 2, 3, 4],
              [0, 5, -3, 7, 1],
              [0, 0, 4, -2, 5],
              [0, 0, 0, 3, 6],
              [0, 0, 0, 0, 2]]),  # 5x5
    np.array([[7, 1, 0, -2, 3, 4],
              [0, 6, -1, 2, 5, 1],
              [0, 0, 5, 3, -4, 2],
              [0, 0, 0, 4, 6, 3],
              [0, 0, 0, 0, 3, 7],
              [0, 0, 0, 0, 0, 1]]),  # 6x6
    np.array([[9, 4, -3, 1, 7, 2, 0],
              [0, 8, 3, 4, 6, 1, 5],
              [0, 0, 7, -2, 1, 3, 4],
              [0, 0, 0, 6, 5, 2, 6],
              [0, 0, 0, 0, 4, 1, 0],
              [0, 0, 0, 0, 0, 2, 3],
              [0, 0, 0, 0, 0, 0, 9]]),  # 7x7
    np.array([[1, 3, 4, 5, 2, 0, 1, 3],
              [0, 2, 6, 1, 4, 5, 0, 2],
              [0, 0, 3, 6, 1, 2, 3, 4],
              [0, 0, 0, 5, 1, 2, 3, 0],
              [0, 0, 0, 0, 4, 6, 2, 1],
              [0, 0, 0, 0, 0, 3, 1, 5],
              [0, 0, 0, 0, 0, 0, 2, 4],
              [0, 0, 0, 0, 0, 0, 0, 1]]),  # 8x8
    np.array([[2, 0, 1, 3, 2, 4, 1, 0, 0],
              [0, 3, 2, 1, 5, 0, 6, 2, 3],
              [0, 0, 4, 2, 1, 7, 3, 4, 5],
              [0, 0, 0, 5, 6, 1, 2, 3, 6],
              [0, 0, 0, 0, 6, 5, 4, 2, 1],
              [0, 0, 0, 0, 0, 7, 2, 3, 0],
              [0, 0, 0, 0, 0, 0, 8, 1, 2],
              [0, 0, 0, 0, 0, 0, 0, 9, 4],
              [0, 0, 0, 0, 0, 0, 0, 0, 10]]),  # 9x9
    np.array([[10, 1, 3, 5, 4, 2, 0, 1, 0, 4],
              [0, 9, 7, 3, 6, 4, 5, 2, 3, 1],
              [0, 0, 8, 6, 1, 3, 2, 4, 0, 5],
              [0, 0, 0, 7, 3, 2, 1, 4, 1, 0],
              [0, 0, 0, 0, 6, 2, 0, 3, 2, 4],
              [0, 0, 0, 0, 0, 5, 1, 2, 4, 2],
              [0, 0, 0, 0, 0, 0, 4, 3, 1, 5],
              [0, 0, 0, 0, 0, 0, 0, 3, 5, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 2, 6],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]])  # 10x10
]

# COLUMNAS DE TÉRMINOS INDEPENDIENTES CORRESPONDIENTES (A)
A = [
    
    np.array([4, 9]),
    np.array([1, 8, 21]),
    np.array([10, 12, 18, 7]),
    np.array([6, 15, 25, 34, 18]),
    np.array([1, 3, 8, 14, 22, 30]),
    np.array([10, 20, 30, 40, 50, 60, 70]),
    np.array([1, 2, 3, 4, 5, 6, 7, 8]),
    np.array([10, 20, 30, 40, 50, 60, 70, 80, 90]),
    np.array([5, 10, 15, 20, 25, 30, 35, 40, 45, 50])
]

# MATRICES TRIANGULARES INFERIORES (low)
low = [
    
    np.array([[2, 0],
              [1, 5]]),  # 2x2
    np.array([[1, 0, 0],
              [4, -3, 0],
              [2, 1, 6]]),  # 3x3
    np.array([[5, 0, 0, 0],
              [-1, 2, 0, 0],
              [3, 4, 1, 0],
              [7, -2, 5, 3]]),  # 4x4
    np.array([[6, 0, 0, 0, 0],
              [3, 5, 0, 0, 0],
              [2, 4, 7, 0, 0],
              [1, 3, 6, 8, 0],
              [0, 2, 5, 9, 10]]),  # 5x5
    np.array([[4, 0, 0, 0, 0, 0],
              [3, 5, 0, 0, 0, 0],
              [2, 4, 6, 0, 0, 0],
              [1, 3, 5, 7, 0, 0],
              [2, 4, 6, 8, 9, 0],
              [1, 3, 4, 5, 6, 7]]),  # 6x6
    np.array([[10, 0, 0, 0, 0, 0, 0],
              [2, 9, 0, 0, 0, 0, 0],
              [1, 3, 8, 0, 0, 0, 0],
              [6, 4, 1, 7, 0, 0, 0],
              [5, 2, 9, 3, 6, 0, 0],
              [4, 6, 1, 3, 7, 8, 0],
              [8, 9, 1, 2, 4, 7, 5]]),  # 7x7
    np.array([[1, 0, 0, 0, 0, 0, 0, 0],
              [2, 3, 0, 0, 0, 0, 0, 0],
              [4, 5, 6, 0, 0, 0, 0, 0],
              [7, 8, 9, 10, 0, 0, 0, 0],
              [11, 12, 13, 14, 15, 0, 0, 0],
              [16, 17, 18, 19, 20, 21, 0, 0],
              [22, 23, 24, 25, 26, 27, 28, 0],
              [29, 30, 31, 32, 33, 34, 35, 36]]),  # 8x8
    np.array([[3, 0, 0, 0, 0, 0, 0, 0, 0],
              [2, 4, 0, 0, 0, 0, 0, 0, 0],
              [1, 3, 5, 0, 0, 0, 0, 0, 0],
              [7, 6, 2, 8, 0, 0, 0, 0, 0],
              [5, 4, 6, 3, 9, 0, 0, 0, 0],
              [9, 8, 7, 6, 5, 10, 0, 0, 0],
              [1, 2, 3, 4, 5, 6, 11, 0, 0],
              [4, 5, 6, 7, 8, 9, 10, 12, 0],
              [6, 7, 8, 9, 10, 11, 12, 13, 14]]),  # 9x9
    np.array([[10, 0, 0, 0, 0, 0, 0, 0, 0, 0],
              [5, 9, 0, 0, 0, 0, 0, 0, 0, 0],
              [2, 6, 8, 0, 0, 0, 0, 0, 0, 0],
              [1, 4, 7, 10, 0, 0, 0, 0, 0, 0],
              [3, 9, 5, 11, 14, 0, 0, 0, 0, 0],
              [8, 1, 2, 3, 7, 12, 0, 0, 0, 0],
              [6, 8, 5, 4, 3, 2, 13, 0, 0, 0],
              [4, 7, 8, 9, 5, 6, 1, 14, 0, 0],
              [9, 10, 7, 8, 2, 1, 3, 4, 15, 0],
              [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]])  # 10x10
]

# COLUMNAS DE TÉRMINOS INDEPENDIENTES CORRESPONDIENTES (B)
B = [
    
    np.array([10, 7]),
    np.array([2, -3, 12]),
    np.array([15, 3, 9, 20]),
    np.array([8, 18, 24, 32, 15]),
    np.array([6, 12, 18, 24, 30, 36]),
    np.array([9, 18, 27, 36, 45, 54, 63]),
    np.array([2, 4, 6, 8, 10, 12, 14, 16]),
    np.array([5, 10, 15, 20, 25, 30, 35, 40, 45]),
    np.array([12, 24, 36, 48, 60, 72, 84, 96, 108, 120])
]

import resolveALU as alu

# TEST PARA REGRESIVAS
for matrix, independent in zip(up,A):
    print(su.sustitucionRegresiva(matrix,independent))
    #print(matrix)

print()
# TEST PARA PROGRESIVAS
for matrix, independent in zip(low,B):
    print(su.sustitucionProgresiva(matrix,independent))


